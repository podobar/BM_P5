<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PlayButton_Track2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PlayButton_Track1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>